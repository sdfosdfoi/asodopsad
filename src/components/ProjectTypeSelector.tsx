import React, { useState } from 'react';
import { trackEvent } from './Analytics';

interface ProjectType {
  id: string;
  name: string;
  description: string;
  icon: string;
  gradient: string;
  features: string[];
  comingSoon?: boolean;
}

interface ProjectTypeSelectorProps {
  onProjectTypeSelect: (type: string) => void;
  setCurrentView: (view: 'home' | 'chat' | 'bolt' | 'ai' | 'design') => void;
}

const ProjectTypeSelector: React.FC<ProjectTypeSelectorProps> = ({ 
  onProjectTypeSelect, 
  setCurrentView 
}) => {
  const [selectedType, setSelectedType] = useState<string | null>(null);

  const projectTypes: ProjectType[] = [
    {
      id: 'bolt',
      name: 'EFIR-WEB',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é AI - –ø–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è bolt.new',
      icon: '‚ö°',
      gradient: 'from-blue-500 to-purple-600',
      features: [
        'AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞',
        'Live preview',
        'React/Vue/Angular',
        '–ì–æ—Ç–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã',
        'Deploy –≤ 1 –∫–ª–∏–∫'
      ]
    },
    {
      id: 'ai',
      name: 'EFIR.AI',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ò–ò-–∞–≥–µ–Ω—Ç–æ–≤, —á–∞—Ç-–±–æ—Ç–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é —Å AgentPlace',
      icon: 'ü§ñ',
      gradient: 'from-purple-500 to-pink-600',
      features: [
        '–°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç-–±–æ—Ç–æ–≤',
        'AI –∞–≥–µ–Ω—Ç—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞',
        '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API',
        '–ù–æ-–∫–æ–¥ —Ä–µ—à–µ–Ω–∏—è'
      ]
    },
    {
      id: 'design',
      name: 'EFIR-DESIGN',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –¥–∏–∑–∞–π–Ω—ã —Å–∞–π—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –∏ TeleportHQ',
      icon: 'üé®',
      gradient: 'from-pink-500 to-orange-500',
      features: [
        '–í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä',
        'AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–∑–∞–π–Ω–∞',
        '–û—Ç–∑—ã–≤—á–∏–≤—ã–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø—ã',
        '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–¥',
        '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏'
      ]
    },
    {
      id: 'chat',
      name: 'AI Chat Assistant',
      description: '–û–±—â–∞–π—Ç–µ—Å—å —Å —Ä–∞–∑–Ω—ã–º–∏ AI –º–æ–¥–µ–ª—è–º–∏',
      icon: 'üí¨',
      gradient: 'from-green-500 to-teal-600',
      features: [
        '8+ AI –º–æ–¥–µ–ª–µ–π',
        '–£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã',
        '–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ',
        '–≠–∫—Å–ø–æ—Ä—Ç –¥–∏–∞–ª–æ–≥–æ–≤',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è'
      ]
    }
  ];

  const handleProjectSelect = (projectType: ProjectType) => {
    if (projectType.comingSoon) {
      alert('üöÄ –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞! –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏.');
      return;
    }

    setSelectedType(projectType.id);
    
    // –¢—Ä–µ–∫–∏–Ω–≥ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞
    trackEvent('project_type_selected', {
      project_type: projectType.id,
      project_name: projectType.name
    });

    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É
    switch (projectType.id) {
      case 'bolt':
        setCurrentView('bolt');
        break;
      case 'ai':
        setCurrentView('ai');
        break;
      case 'design':
        setCurrentView('design');
        break;
      case 'chat':
        setCurrentView('chat');
        break;
      default:
        onProjectTypeSelect(projectType.id);
    }
  };

  return (
    <section className="py-20 px-6">
      <div className="max-w-7xl mx-auto">
        <div className="text-center mb-16">
          <h2 className="text-4xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
            –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å?
          </h2>
          <p className="text-xl text-gray-300 max-w-3xl mx-auto">
            –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –≤–æ–ø–ª–æ—â–µ–Ω–∏—è –≤–∞—à–∏—Ö –∏–¥–µ–π. –û—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–æ –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º ‚Äî –≤—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {projectTypes.map((type) => (
            <div
              key={type.id}
              className={`relative group cursor-pointer transform transition-all duration-300 hover:scale-105 ${
                selectedType === type.id ? 'scale-105' : ''
              }`}
              onClick={() => handleProjectSelect(type)}
            >
              {/* Coming Soon Badge */}
              {type.comingSoon && (
                <div className="absolute -top-2 -right-2 z-10 bg-yellow-500 text-black px-2 py-1 rounded-full text-xs font-bold">
                  –°–ö–û–†–û
                </div>
              )}

              {/* Card */}
              <div className={`relative overflow-hidden rounded-2xl bg-gradient-to-br ${type.gradient} p-6 h-full min-h-[320px] group-hover:shadow-2xl transition-all duration-300`}>
                {/* Background Pattern */}
                <div className="absolute inset-0 bg-black/20 backdrop-blur-sm"></div>
                
                {/* Content */}
                <div className="relative z-10 h-full flex flex-col">
                  {/* Icon */}
                  <div className="text-5xl mb-4 transform group-hover:scale-110 transition-transform duration-300">
                    {type.icon}
                  </div>

                  {/* Title & Description */}
                  <h3 className="text-2xl font-bold text-white mb-3">
                    {type.name}
                  </h3>
                  <p className="text-white/90 text-sm mb-6 leading-relaxed">
                    {type.description}
                  </p>

                  {/* Features */}
                  <div className="flex-1">
                    <div className="space-y-2">
                      {type.features.slice(0, 4).map((feature, idx) => (
                        <div key={idx} className="flex items-center text-white/80 text-sm">
                          <div className="w-1.5 h-1.5 bg-white rounded-full mr-2 opacity-80"></div>
                          {feature}
                        </div>
                      ))}
                      {type.features.length > 4 && (
                        <div className="text-white/60 text-xs">
                          +{type.features.length - 4} –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
                        </div>
                      )}
                    </div>
                  </div>

                  {/* Action Button */}
                  <div className="mt-6">
                    <div className="bg-white/20 backdrop-blur-sm border border-white/30 rounded-lg px-4 py-2 text-center text-white font-medium group-hover:bg-white/30 transition-all duration-300">
                      {type.comingSoon ? 'üîî –£–≤–µ–¥–æ–º–∏—Ç—å' : 'üöÄ –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å'}
                    </div>
                  </div>
                </div>

                {/* Hover Effect */}
                <div className="absolute inset-0 bg-white/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
              </div>
            </div>
          ))}
        </div>

        {/* Additional Info */}
        <div className="mt-16 text-center">
          <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-2xl p-8 max-w-4xl mx-auto">
            <h3 className="text-2xl font-bold mb-4 text-blue-400">
              üéØ –í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ
            </h3>
            <p className="text-gray-300 mb-6">
              –ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –ª—É—á—à–∏–µ AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª—é–±—ã—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤. 
              –û—Ç –ø—Ä–æ—Å—Ç—ã—Ö —Å–∞–π—Ç–æ–≤ –¥–æ —Å–ª–æ–∂–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π ‚Äî –≤—ã–±–∏—Ä–∞–π—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–≤–æ–µ–π –∑–∞–¥–∞—á–∏.
            </p>
            <div className="flex flex-wrap justify-center gap-4 text-sm">
              <span className="bg-blue-500/20 text-blue-300 px-3 py-1 rounded-full">
                ‚ö° –ë—ã—Å—Ç—Ä–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
              </span>
              <span className="bg-purple-500/20 text-purple-300 px-3 py-1 rounded-full">
                ü§ñ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç
              </span>
              <span className="bg-green-500/20 text-green-300 px-3 py-1 rounded-full">
                üîß –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã
              </span>
              <span className="bg-pink-500/20 text-pink-300 px-3 py-1 rounded-full">
                üöÄ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –¥–µ–ø–ª–æ–π
              </span>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default ProjectTypeSelector;

